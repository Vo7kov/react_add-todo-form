{"version":3,"sources":["api/users.ts","services/findUserById.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","services/getUser.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","title","completed","classNames","TodoList","todos","map","todo","userId","usersFromServer","find","App","useState","renderedTodos","setRenderedTodos","inputValue","setInputValue","hasInputError","setHasInputError","selectValue","setSelectValue","hasSelectError","setHasSelectError","getLargestId","todosIdArray","Math","max","action","method","onSubmit","event","preventDefault","type","value","onChange","target","disabled","selected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3be6c46e.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport const findUserById = (userId: number) => {\n  return usersFromServer.find((user) => user.id === userId) || null;\n};\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\n\nimport { User } from '../../types/User';\n\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  title: string,\n  id: number,\n  completed: boolean,\n  user: User | null,\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  title,\n  id,\n  completed,\n  user,\n}) => {\n  return (\n    <li\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo\n          user={user}\n        />\n      )}\n    </li>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <ul className=\"TodoList\">\n      {todos.map((todo: Todo) => {\n        const {\n          title,\n          id,\n          completed,\n          user,\n        } = todo;\n\n        return (\n          <TodoInfo\n            title={title}\n            id={id}\n            completed={completed}\n            user={user}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n","import { useState } from 'react';\n\n// Data\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\n// Utils\nimport { getUser } from './services/getUser';\nimport { findUserById } from './services/findUserById';\n\n// Types\nimport { Todo } from './types/Todo';\n\n// Components\nimport { TodoList } from './components/TodoList';\n\n// Styles\nimport './App.scss';\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [renderedTodos, setRenderedTodos] = useState(todos);\n\n  const [inputValue, setInputValue] = useState('');\n  const [hasInputError, setHasInputError] = useState(false);\n\n  const [selectValue, setSelectValue] = useState(0);\n  const [hasSelectError, setHasSelectError] = useState(false);\n\n  const getLargestId = () => {\n    const todosIdArray = renderedTodos.map(todo => todo.id);\n\n    return Math.max(...todosIdArray);\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputValue(event.target.value);\n    setHasInputError(false);\n  };\n\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectValue(+event.target.value);\n    setHasSelectError(false);\n  };\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasInputError(!inputValue);\n    setHasSelectError(!selectValue);\n\n    if (!inputValue || !selectValue) {\n      return;\n    }\n\n    setRenderedTodos([\n      ...renderedTodos,\n      {\n        id: getLargestId() + 1,\n        title: inputValue,\n        userId: selectValue,\n        completed: false,\n        user: findUserById(selectValue),\n      },\n    ]);\n\n    setInputValue('');\n    setSelectValue(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={inputValue}\n            onChange={handleInputChange}\n          />\n\n          {hasInputError && (\n            <span\n              className=\"error\"\n            >\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectValue}\n            onChange={handleSelectChange}\n          >\n            <option\n              value=\"0\"\n              disabled\n              selected\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => {\n              const { id, name } = user;\n\n              return (\n                <option\n                  value={id}\n                  key={id}\n                >\n                  {name}\n                </option>\n              );\n            })}\n          </select>\n\n          {hasSelectError && (\n            <span\n              className=\"error\"\n            >\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={renderedTodos}\n      />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import usersFromServer from '../api/users';\n\nimport { User } from '../types/User';\n\nexport function getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}